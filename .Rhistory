# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2020-01-01")
# limit to 50 polygons
spatial.obj = read_sf(poly)
library(rainfallR)
library(iffitoR)
library(sf)
library(raster)
# limit to 50 polygons
spatial.obj = read_sf(poly)
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[50,]
dim(spatial.obj)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
dim(spatial.obj)
head(spatial.obj)
library(rainfallR)
remotes::install_github("RobinKohrs/rainfallR")
remotes::install_github("RobinKohrs/rainfallR", build_vignettes = T)
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2020-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
dts = as.Date("2020-01-01")
remotes::install_github("RobinKohrs/rainfallR")
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2020-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
res
bind_cols
?bind_cols
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
res
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
bozen
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
a = "X20171225"
a %>% substr(., start=2, end=nchar(.))
a %>% substr(., start=2, stop=nchar(.))
remotes::install_github("RobinKohrs/rainfallR")
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
library(dplyr)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
res
dim(res)
length(res)
res = res[[1]]
dim(res)
View(res)
res = res[[1]]
# convert it to some better format
res_long = rainfallR::get_cumulative_rainfall(res)
res
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
res
res_single = res[[1]]
res_sinle
res_single
class(res_single)
?rainfallR::get_cumulative_rainfall
# convert it to some better format
res_long = rainfallR::get_cumulative_rainfall(res)
res
class(res)
length(res)
save(res, "../../../Desktop/test.rda")
save("../../../Desktop/test.rda", res)
save(res, "../../../Desktop/test.RDate")
save(res, "../../../Desktop/test.RData")
save(res, file="../../../Desktop/test.RData")
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
res
# convert it to some better format
res_accumulated = rainfallR::get_cumulative_rainfall(res)
library(dplyr)
library(iffitoR)
library(sf)
library(raster)
# convert it to some better format
res_accumulated = rainfallR::get_cumulative_rainfall(res)
get_cumulative_rainfall
remotes::install_github("RobinKohrs/rainfallR")
remove.packages("rainfallR")
library(rainfallR)
remotes::install_github("RobinKohrs/rainfallR")
rainfallR::get_cumulative_rainfall
library(dplyr)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
# convert it to some better format
res_accumulated = rainfallR::get_cumulative_rainfall(res)
res_accumulated
first_date = res_accumulated[[1]]
first_date
mapview(first_date)
library(mapview)
mapview(first_date)
first_date = res_accumulated[[1]]
first_date$accumulated
l = first_date$accumulated
l
class(l)
length(l)
head(first_date)
head(first_date)
library(ggplot2)
p = ggplot(date = first_date)
p
i = 1
first_date[i,]
first_date[i,]$accumulated
names(first_date[i,]$accumulated)
first_date[i,]$accumulated
names(first_date[i,]$accumulated)[[1]]
names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated
dates = names(first_date[i,]$accumulated[[1]])
p = ggplot(data = first_date)
# add the lines
for (i in nrow(first_date)) {
precip = first_date[i,]$accumulated
dates = names(first_date[i,]$accumulated[[1]])
p = p + geom_line(aes(x = dates, y= precip))
}
p
precip = first_date[i,]$accumulated
dates = names(first_date[i,]$accumulated[[1]])
gl = geom_line(aes(x=dates, y =precip))
gl
p = ggplot(data = first_date)
df = first_date
head(df)
str(df)
glimpse(df)
df$accumulated[[1]]
mypl = map(first_date, ~ggplot(data = .x, aes(x=names(x), y = x)) + geom_point())
library(purr)
library(purrr)
mypl = map(first_date, ~ggplot(data = .x, aes(x=names(x), y = x)) + geom_point())
p = ggplot()
p
i
i = 1
names(first_date[,i]$accumulated)
names(first_date[,i]$accumulated[[1]])
first_date[,i]$accumulated
first_date
names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated[[1]]
precip
df = data.frame(dates = dates, precip=precip)
df
df = data.frame(dates = dates, precip=precip, row.names = F)
df = data.frame(dates = dates, precip=precip, row.names = NULL)
df
df = data.frame(dates = dates, precip=precip, row.names = NULL) %>%
mutate(dates = as.Date(dates, "%Y%m%d"))
df
df = data.frame(dates = dates, precip=precip, row.names = NULL)
df
str(df)
p = ggplot()
for (i in 1:nrow(first_date)) {
dates = names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated[[1]]
df = data.frame(dates = dates, precip=precip, row.names = NULL)
p = p + geom_line(data=df, aes(x=dates, y=precip))
}
p
i = 1
dates = names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated[[1]]
df = data.frame(dates = dates, precip=precip, row.names = NULL)
df
p = p + geom_line(data=df, aes(x=dates, y=precip))
p
p = ggplot()
p
df
p + geom_line(data=df, aes(x=dates, y=precip))
str(df)
p + geom_path(data=df, aes(x=dates, y=precip))
df
ggplot(df) + geom_line(aes(x=dates, y=precip))
ggplot(df) + geom_line(aes(x=dates, y=precip, group=dates))
ggplot(df) + geom_line(aes(x=dates, y=precip, group=precip))
ggplot(df) + geom_point(aes(x=dates, y=precip))
ggplot(df) + geom_line(aes(x=dates, y=precip, group=1))
p = ggplot()
for (i in 1:nrow(first_date)) {
dates = names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated[[1]]
df = data.frame(dates = dates, precip=precip, row.names = NULL)
p = p + geom_path(data=df, aes(x=dates, y=precip, group = 1))
}
p
p = ggplot()
for (i in 1:nrow(first_date)) {
dates = names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated[[1]]
df = data.frame(dates = dates, precip=precip, row.names = NULL)
p = p + geom_path(data=df, aes(x=dates, y=precip, group = 1))
}
p
df = data.frame(dates = dates, precip=precip, class=i, row.names = NULL)
df
p = ggplot()
for (i in 1:nrow(first_date)) {
dates = names(first_date[i,]$accumulated[[1]])
precip = first_date[i,]$accumulated[[1]]
df = data.frame(dates = dates, precip=precip, class=i, row.names = NULL)
p = p + geom_path(data=df, aes(x=dates, y=precip, col=class))
}
p
df
first_date
ls
remotes::install_github("RobinKohrs/rainfallR")
rainfallR::get_rainfall
remotes::install_github("RobinKohrs/rainfallR")
remotes::install_github("RobinKohrs/rainfallR", force = T)
sessionInfo()
library(rainfallR)
rainfallR::get_rainfall
library(dplyr)
library(ggplot2)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
res
# convert it to some better format
res_accumulated = rainfallR::get_cumulative_rainfall(res)
res_accumulated
remotes::install_github("RobinKohrs/rainfallR")
remotes::install_github("RobinKohrs/rainfallR")
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
library(rainfallR)
library(dplyr)
library(ggplot2)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
res
# convert it to some better format
res_accumulated = rainfallR::get_cumulative_rainfall(res)
res_accumulated
df = res_accumulated[[1]]
df %>% filter(iffi=360100)
df %>% filter(iffi==360100)
df %>% filter(iffi==59630200)
df
df %>% filter(iffi==59630200)
df %>% filter(iffi==59630200) %>% View()
a = df %>% filter(iffi==59630200) %>% View()
a
a = df %>% filter(iffi==59630200)
a$accumulated
df %>% filter(iffi==59630200)
remotes::install_github("RobinKohrs/rainfallR")
library(rainfallR)
library(dplyr)
library(ggplot2)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
dts = as.Date("2018-01-01")
days_back = 7
# limit to 50 polygons
spatial.obj = read_sf(poly) %>% dplyr::slice_head(n=50)
# better get used to use base R again
spatial.obj = read_sf(poly) %>% .[1:50,]
res = rainfallR::get_rainfall(data_path = path_ncdf,
fun = mean,
spatial.obj = spatial.obj,
dts = dts,
days_back = days_back)
# convert it to some better format
res_accumulated = rainfallR::get_cumulative_rainfall(res)
long_accumulated = rainfallR::make_cumulative_rainfall(res)
long_accumulated
## the long one
first_date = long_accumulated[[1]]
first_date
ggplot(first_date) +
geom_line(aes(x = date, y=precip, group=iffi))
ggplot(first_date) +
geom_line(aes(x = date, y=cumsum, group=iffi))
ggplot(first_date) +
geom_line(aes(x = date, y=cumsum, group=iffi, col=iffi))
first_date$iffi = as.factor(first_date$iffi)
ggplot(first_date) +
geom_line(aes(x = date, y=cumsum, group=iffi, col=iffi))
Sys.info()["sysname"]
library(rainfallR)
library(dplyr)
library(ggplot2)
library(iffitoR)
library(sf)
library(raster)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# path to spatial data
poly = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
